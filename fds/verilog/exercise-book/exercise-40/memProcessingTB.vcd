$date
	Tue Jun 25 21:50:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module memProcessingTB $end
$var reg 8 ! DataInA [7:0] $end
$var reg 1 " Init $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$scope module uut $end
$var wire 8 % DataInA [7:0] $end
$var wire 1 " Init $end
$var wire 1 $ Reset $end
$var wire 1 # clock $end
$var wire 8 & d_out_1 [7:0] $end
$var parameter 2 ' COMP $end
$var parameter 2 ( HALT $end
$var parameter 2 ) READA $end
$var reg 8 * add_out [7:0] $end
$var reg 3 + addr_A_to_read_write [2:0] $end
$var reg 2 , addr_B_to_read_write [1:0] $end
$var reg 2 - current_state [1:0] $end
$var reg 8 . d_out_2 [7:0] $end
$var reg 8 / data_to_write_to_B [7:0] $end
$var reg 1 0 incA $end
$var reg 1 1 incB $end
$var reg 2 2 next_state [1:0] $end
$var reg 1 3 sign $end
$var reg 8 4 sub_out [7:0] $end
$var reg 1 5 weA $end
$var reg 1 6 weB $end
$scope module memoryA $end
$var wire 3 7 addr_to_read_write [2:0] $end
$var wire 1 # clock $end
$var wire 8 8 data_in [7:0] $end
$var wire 1 5 write_enabled $end
$var parameter 32 9 Nawidth $end
$var parameter 32 : Ndwidth $end
$var reg 8 ; data_out [7:0] $end
$upscope $end
$scope module memoryB $end
$var wire 2 < addr_to_read_write [1:0] $end
$var wire 1 # clock $end
$var wire 8 = data_in [7:0] $end
$var wire 1 6 write_enabled $end
$var parameter 32 > Nawidth $end
$var parameter 32 ? Ndwidth $end
$var reg 8 @ data_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 ?
b10 >
b1000 :
b11 9
b0 )
b10 (
b1 '
$end
#0
$dumpvars
bx @
bx =
b0 <
bx ;
b0 8
b0 7
06
15
bx 4
x3
b0 2
01
10
bx /
b0 .
b0 -
b0 ,
b0 +
bx *
bx &
b0 %
1$
0#
1"
b0 !
$end
#1
1#
#2
0#
#3
b0 /
b0 =
13
b0 4
b0 *
b0 &
b0 ;
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
0#
0$
#11
1#
#12
0#
0"
#13
10
15
b1 +
b1 7
1#
#14
0#
b1 !
b1 %
b1 8
#15
bx /
bx =
bx 4
bx *
x3
10
15
bx &
bx ;
b10 +
b10 7
1#
#16
0#
b10 !
b10 %
b10 8
#17
bx /
bx =
x3
bx 4
bx *
10
15
bx .
b11 +
b11 7
1#
#18
0#
b11 !
b11 %
b11 8
#19
10
15
b100 +
b100 7
1#
#20
0#
b111 !
b111 %
b111 8
#21
10
15
b101 +
b101 7
1#
#22
0#
b110 !
b110 %
b110 8
#23
10
15
b110 +
b110 7
1#
#24
0#
b101 !
b101 %
b101 8
#25
b1 2
10
15
b111 +
b111 7
1#
#26
0#
b100 !
b100 %
b100 8
#27
10
05
b1 -
b0 +
b0 7
1#
#28
0#
#29
bx /
bx =
x3
bx 4
bx *
10
b0 &
b0 ;
b1 +
b1 7
1#
#30
0#
#31
11
16
10
b1 /
b1 =
13
b11111111 4
b1 *
b1 &
b1 ;
b10 +
b10 7
b0 .
1#
#32
0#
#33
b11 /
b11 =
13
b11111111 4
b11 *
01
10
06
b10 &
b10 ;
b1 .
b1 ,
b1 <
b11 +
b11 7
1#
#34
0#
#35
11
16
10
b101 /
b101 =
13
b11111111 4
b101 *
b11 &
b11 ;
b100 +
b100 7
b10 .
1#
#36
0#
#37
b1010 /
b1010 =
13
b11111100 4
b1010 *
01
10
06
b111 &
b111 ;
b11 .
b10 ,
b10 <
b101 +
b101 7
1#
#38
0#
#39
11
16
10
b1 /
b1 =
03
b1 4
b1101 *
b110 &
b110 ;
b110 +
b110 7
b111 .
1#
#40
0#
#41
b1 /
b1 =
b1 4
b1011 *
01
10
06
b101 &
b101 ;
b110 .
b11 ,
b11 <
b111 +
b111 7
1#
#42
0#
#43
b10 2
11
16
00
b1 /
b1 =
b1 4
b1001 *
b100 &
b100 ;
b0 +
b0 7
b101 .
1#
#44
0#
#45
b100 /
b100 =
b100 4
b100 *
01
06
b0 &
b0 ;
b100 .
b0 ,
b0 <
b10 -
1#
#46
0#
#47
13
b0 /
b0 =
b0 4
b0 *
b1 @
b0 .
1#
#48
0#
#49
1#
#50
0#
#51
1#
#52
0#
#53
1#
#54
0#
#55
1#
#56
0#
#57
1#
#58
0#
#59
1#
#60
0#
#61
1#
#62
0#
#63
1#
#64
0#
#65
1#
#66
0#
#67
1#
#68
0#
#69
1#
#70
0#
#71
1#
#72
0#
#73
1#
#74
0#
#75
1#
#76
0#
#77
1#
#78
0#
#79
1#
#80
0#
#81
1#
#82
0#
#83
1#
#84
0#
#85
1#
#86
0#
#87
1#
#88
0#
#89
1#
#90
0#
#91
1#
#92
0#
#93
1#
#94
0#
#95
1#
#96
0#
#97
1#
#98
0#
#99
1#
#100
0#
#101
1#
#102
0#
#103
1#
#104
0#
#105
1#
#106
b0 2
0#
1"
#107
10
15
b0 -
1#
#108
0#
#109
1#
#110
0#
#111
b100 /
b100 =
b11111100 4
b100 *
13
b100 &
b100 ;
1#
#112
0#
#113
1#
#114
0#
#115
1#
#116
0#
#117
1#
#118
0#
#119
1#
#120
0#
#121
1#
#122
0#
#123
1#
#124
0#
#125
1#
#126
0#
#127
1#
#128
0#
#129
1#
#130
0#
#131
1#
#132
0#
#133
1#
#134
0#
#135
1#
#136
0#
#137
1#
#138
0#
#139
1#
#140
0#
#141
1#
#142
0#
#143
1#
#144
0#
#145
1#
#146
0#
#147
1#
#148
0#
#149
1#
#150
0#
#151
1#
#152
0#
#153
1#
#154
0#
#155
1#
#156
0#
