$date
	Sat Mar 30 10:41:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_mux_8to1 $end
$var wire 3 ! out [2:0] $end
$var reg 3 " sel [2:0] $end
$var reg 3 # x1 [2:0] $end
$var reg 3 $ x2 [2:0] $end
$var reg 3 % x3 [2:0] $end
$var reg 3 & x4 [2:0] $end
$var reg 3 ' x5 [2:0] $end
$var reg 3 ( x6 [2:0] $end
$var reg 3 ) x7 [2:0] $end
$var reg 3 * x8 [2:0] $end
$scope module mux $end
$var wire 3 + s [2:0] $end
$var wire 3 , x1 [2:0] $end
$var wire 3 - x2 [2:0] $end
$var wire 3 . x3 [2:0] $end
$var wire 3 / x4 [2:0] $end
$var wire 3 0 x5 [2:0] $end
$var wire 3 1 x6 [2:0] $end
$var wire 3 2 x7 [2:0] $end
$var wire 3 3 x8 [2:0] $end
$var reg 3 4 f [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b111 4
b111 3
b110 2
b101 1
b100 0
b11 /
b10 .
b1 -
b0 ,
b111 +
b111 *
b110 )
b101 (
b100 '
b11 &
b10 %
b1 $
b0 #
b111 "
b111 !
$end
#1
b110 !
b110 4
b110 "
b110 +
#2
b101 !
b101 4
b101 "
b101 +
#3
b11 !
b11 4
b100 "
b100 +
#4
b10 !
b10 4
b11 "
b11 +
#5
b1 !
b1 4
b10 "
b10 +
#6
b0 !
b0 4
b1 "
b1 +
#7
b0 "
b0 +
#8
